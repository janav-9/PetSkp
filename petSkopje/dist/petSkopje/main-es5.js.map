{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-pet-dialog/add-pet-dialog.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/common/card/card.component.html","webpack:///./src/app/dialog-details/dialog-details.component.html","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/mypet/mypet.component.html","webpack:///./src/app/navigation/header/header.component.html","webpack:///./src/app/shops/shops.component.html","webpack:///./src/app/vets/vets.component.html","webpack:///./src/app/add-pet-dialog/add-pet-dialog.component.css","webpack:///./src/app/add-pet-dialog/add-pet-dialog.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/common/card/card.component.css","webpack:///./src/app/common/card/card.component.ts","webpack:///./src/app/dialog-details/dialog-details.component.css","webpack:///./src/app/dialog-details/dialog-details.component.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/mypet/mypet.component.css","webpack:///./src/app/mypet/mypet.component.ts","webpack:///./src/app/navigation/header/header.component.css","webpack:///./src/app/navigation/header/header.component.ts","webpack:///./src/app/notification.service.ts","webpack:///./src/app/shops/shops.component.css","webpack:///./src/app/shops/shops.component.ts","webpack:///./src/app/vets/vets.component.css","webpack:///./src/app/vets/vets.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"content\\\">\\n    <h2>Внес на миленик </h2>\\n    <hr>\\n    <form #myForm=\\\"ngForm\\\">\\n        <mat-label>Тип на животно</mat-label>\\n        <br>\\n        <mat-radio-group [(ngModel)]=\\\"pet.Type\\\" name=\\\"pet.Type\\\" required>\\n            <mat-radio-button value=\\\"Мачка\\\">Мачка</mat-radio-button>\\n            <mat-radio-button value=\\\"Куче\\\">Куче</mat-radio-button>\\n            <mat-radio-button value=\\\"Папагал\\\">Папагал</mat-radio-button>\\n            <mat-radio-button value=\\\"Морско прасе\\\">Морско прасе</mat-radio-button>\\n        </mat-radio-group>\\n        <br>\\n        <mat-label>Име</mat-label>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <input matInput minlength=\\\"1\\\" placeholder=\\\"Име\\\" [(ngModel)]=\\\"pet.Name\\\" name=\\\"pet.Name\\\" required>\\n        </mat-form-field>\\n        <br>\\n        <mat-label>Датум на раѓање</mat-label>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"maxDate\\\"  [(ngModel)]=\\\"birthDate\\\" name=\\\"birthDate\\\" required>\\n\\n        <br>\\n        <mat-label>Пол</mat-label>\\n        <mat-radio-group [(ngModel)]=\\\"pet.Gender\\\" name=\\\"pet.Gender\\\" required>\\n            <mat-radio-button value=\\\"male\\\">Машко</mat-radio-button>\\n            <mat-radio-button value=\\\"female\\\">Женско</mat-radio-button>\\n        </mat-radio-group>\\n\\n        <div *ngIf=\\\"pet.Type && (pet.Type == 'Мачка' || pet.Type == 'Куче')\\\">\\n            <mat-label>Раса</mat-label>\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <input matInput minlength=\\\"1\\\" placeholder=\\\"Раса\\\" [(ngModel)]=\\\"pet.breed\\\" name=\\\"pet.breed\\\">\\n            </mat-form-field>\\n            <br>\\n\\n            <mat-label>Вакцина против беснило</mat-label>\\n            <mat-checkbox [(ngModel)]=\\\"pet.Rabies\\\" name=\\\"pet.Rabies\\\"></mat-checkbox>\\n            <br>\\n            <div *ngIf=\\\"pet.Rabies\\\">\\n\\n                <mat-label>Датум на последна вакцина </mat-label>\\n                <input matInput [matDatepicker]=\\\"picker\\\" [min]=\\\"birthDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"rabiesDate\\\" name=\\\"rabiesDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n                <br>\\n            </div>\\n            <mat-label>Вакцина против заразни паразитски болести</mat-label>\\n            <mat-checkbox [(ngModel)]=\\\"pet.Parvo\\\" name=\\\"pet.Parvo\\\"></mat-checkbox>\\n            <br>\\n            <div *ngIf=\\\"pet.Parvo\\\">\\n                <mat-label>Датум на последна вакцина </mat-label>\\n                <input matInput [matDatepicker]=\\\"picker\\\" [min]=\\\"birthDate\\\" [max]=\\\"maxDate\\\"  [(ngModel)]=\\\"parvoDate\\\" name=\\\"parvoDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n                <br>\\n            </div>\\n            <mat-label>Датум на последно внатрешно прочистување </mat-label>\\n            <input matInput [matDatepicker]=\\\"picker\\\" [min]=\\\"birthDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"parasitesDate\\\" name=\\\"parasitesDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n            <br>\\n            <mat-label>Датум на ампула </mat-label>\\n            <input matInput [matDatepicker]=\\\"picker1\\\" [min]=\\\"birthDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"ampuleDate\\\" name=\\\"ampuleDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker1></mat-datepicker>\\n            <br>\\n            <mat-label>Датум на последно капење/шишање </mat-label>\\n            <input matInput [matDatepicker]=\\\"picker2\\\" [min]=\\\"birthDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"groomerDate\\\" name=\\\"groomerDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2></mat-datepicker>\\n            <br>\\n        </div>\\n        <br>\\n    </form>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"savePet()\\\" [disabled]=\\\"!myForm.valid\\\" [mat-dialog-close]=\\\"myForm.valid\\\">Зачувај</button>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<main>\\n<router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\" style=\\\"height: 100%;\\\">\\n    <mat-card-header>\\n      <mat-card-title>{{name}}</mat-card-title>\\n    </mat-card-header>\\n    <img mat-card-image>\\n    <mat-card-content>\\n      <img src = \\\"{{photourl}}\\\" width=\\\"200\\\" height=\\\"100\\\"/>\\n      <p>\\n        {{address}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <mat-chip-list>\\n            <mat-chip color=\\\"primary\\\" selected><mat-icon>grade</mat-icon>  {{rating}}  </mat-chip>\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog()\\\">Детали</button>\\n                <button mat-fab color=\\\"warn\\\" *ngIf=\\\"showFavButton\\\" (click)=\\\"setVet()\\\">\\n                  <mat-icon>favorite</mat-icon>\\n                </button>\\n          </mat-chip-list>\\n    </mat-card-actions>\\n  </mat-card>\"","module.exports = \"<div [hidden]=\\\"loading==false\\\"></div>\\n<div *ngIf=\\\"loading==false\\\" class=\\\"dialog\\\">\\n    <h1 color=\\\"primary\\\">\\n        {{place.name}}\\n    </h1>\\n    <mat-dialog-content>\\n        <hr>\\n        <div>\\n            <p><b> Галерија</b></p>\\n            <mat-grid-list cols=\\\"4\\\">\\n                <mat-grid-tile *ngIf=\\\"place.photos[0] != undefined\\\"><img src=\\\"{{getimg(place.photos[0]?.photo_reference)}}\\\"\\n                        width=\\\"150\\\" height=\\\"100\\\" /></mat-grid-tile>\\n                <mat-grid-tile *ngIf=\\\"place.photos[1] != undefined\\\"><img src=\\\"{{getimg(place.photos[1]?.photo_reference)}}\\\"\\n                        width=\\\"150\\\" height=\\\"100\\\" /></mat-grid-tile>\\n                <mat-grid-tile *ngIf=\\\"place.photos[2] != undefined\\\"><img src=\\\"{{getimg(place.photos[2]?.photo_reference)}}\\\"\\n                        width=\\\"150\\\" height=\\\"100\\\" /></mat-grid-tile>\\n                <mat-grid-tile *ngIf=\\\"place.photos[3] != undefined\\\"><img src=\\\"{{getimg(place.photos[3]?.photo_reference)}}\\\"\\n                        width=\\\"150\\\" height=\\\"100\\\" /></mat-grid-tile>\\n            </mat-grid-list>\\n        </div>\\n        <hr>\\n\\n        <div>\\n            <p><b> Контакт</b></p>\\n            <p>\\n                <a href=\\\"{{'tel:'+place.formatted_phone_number}}\\\">\\n                    <mat-icon>phone</mat-icon>{{place.formatted_phone_number}}\\n                </a>\\n            </p>\\n            <p><a href=\\\"{{place.website}}\\\">\\n                    <mat-icon>web</mat-icon>Веб страна\\n                </a></p>\\n            <p>\\n                <mat-icon>house</mat-icon> {{place.formatted_address}}\\n            </p>\\n\\n\\n            <mat-accordion>\\n\\n                <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\n                    <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            Работно време\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                            {{place.opening_hours.open_now ? 'Отворено' : 'Затворено'}}\\n                        </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                    <div *ngFor=\\\"let a of place.opening_hours.weekday_text\\\">\\n                        <p>{{a}} </p>\\n                    </div>\\n                </mat-expansion-panel>\\n            </mat-accordion>\\n        </div>\\n        <hr>\\n\\n        <div>\\n            <agm-map [latitude]=\\\"place.geometry.location.lat\\\" [longitude]=\\\"place.geometry.location.lng\\\" [zoom]=\\\"15\\\">\\n                <agm-marker [latitude]=\\\"place.geometry.location.lat\\\" [longitude]=\\\"place.geometry.location.lng\\\"\\n                    [markerDraggable]=\\\"false\\\">\\n                </agm-marker>\\n            </agm-map>\\n        </div>\\n        <hr>\\n\\n    </mat-dialog-content>\\n    <mat-dialog-actions>\\n        <button mat-button mat-dialog-close mat-stroked-button color=\\\"primary\\\">Затвори</button>\\n    </mat-dialog-actions>\\n</div>\"","module.exports = \"<mat-grid-list cols=\\\"{{cols}}\\\" rowHeight=\\\"500px\\\" (window:resize)=\\\"onResize($event)\\\" [gutterSize]=\\\"'20px'\\\">\\n    <mat-grid-tile colspan=\\\"{{cols}}\\\" style=\\\" background: #faf7f2; \\\" >\\n        <div style=\\\"text-align: center\\\" >\\n            <h1>PetSkopje</h1>\\n            <p>Сѐ што ви треба за вашиот миленик!</p>\\n            <img src='../../assets/img/home.jpg'>\\n          \\n        </div>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile colspan=\\\"1\\\" >\\n        <div style=\\\"text-align: center\\\">\\n            <img src='../../assets/img/vet.jpg' height=\\\"50%\\\" width=\\\"50%\\\">\\n            <h4>Најголемиот регистар на ветеринари и амбуланти за врвна нега на вашиот миленик</h4>\\n            <a mat-raised-button color=\\\"primary\\\" href=\\\"vets\\\">Види повеќе</a>\\n\\n        </div>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile colspan=\\\"1\\\">\\n        <div style=\\\"text-align: center\\\">\\n            <img src='../../assets/img/petsh.jpg' height=\\\"50%\\\" width=\\\"50%\\\">\\n            <h4 height=\\\"30%\\\" width=\\\"30%\\\">Најдобрите производи во пет шоповите низ градот, достапни со само еден клик!</h4>\\n            <a mat-raised-button color=\\\"primary\\\" href=\\\"shops\\\">Види повеќе</a>\\n        </div>\\n    </mat-grid-tile>\\n\\n\\n    <mat-grid-tile colspan=\\\"{{cols}}\\\"  style=\\\" background: #faf7f2; \\\">\\n        <div style=\\\"text-align: center;width:50%; font-size: larger\\\">\\n            <img src='../../assets/img/lotdogs.png' width=\\\"80%\\\" height=\\\"80%\\\">\\n            <p >Сите важни информации за вашите миленичиња на едно место. Добијте навремени известувања и бидете во тек со имунизацијата и прочистувањето на вашето куче или мачка. </p>\\n\\n        </div>\\n\\n    </mat-grid-tile>\\n\\n</mat-grid-list>\\n<div style=\\\"text-align: center;color: antiquewhite; background: black; height: 50px!important; vertical-align: middle\\\">\\n    <p >PetSkp 2021</p>\\n</div>\"","module.exports = \"<div class=\\\"content\\\">\\n\\n    <div *ngIf=\\\"auth.user$ | async as user\\\">\\n        <h3>Добредојдовте</h3>\\n\\n        <h3>{{ user.name }} {{ user.surname }}</h3>\\n        <h4>{{ user.email }} </h4>\\n\\n        <br>\\n        <button (click)=\\\"auth.signOut()\\\" mat-raised-button color=\\\"accent\\\">Одјави се</button>\\n        <br>\\n        <br>\\n        <br> <br>\\n\\n\\n        <mat-slide-toggle [(ngModel)]=\\\"user.notifPet\\\">Известувања за миленик</mat-slide-toggle>\\n        <br>\\n\\n        <br> <br>\\n\\n\\n        <button mat-raised-button (click)=\\\"updateUser(user.notifPet, user.notifProd)\\\">Зачувај промени</button>\\n    </div>\\n</div>\\n<div class=\\\"content\\\">\\n    <button button=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n        <mat-icon>add</mat-icon> Додај миленик\\n    </button>\\n    <br>\\n    <mat-grid-list cols=\\\"{{cols}}\\\" rowHeight=\\\"2:3\\\" (window:resize)=\\\"onResize($event)\\\" [gutterSize]=\\\"'20px'\\\">\\n        <mat-grid-tile class=\\\"mat-elevation-z8\\\" *ngFor=\\\"let pet of myArray\\\" colspan=\\\"1\\\">\\n            <div>\\n                <div style=\\\"padding-left:5%; \\\">\\n                    <h2>\\n                        {{pet.Name}}<mat-icon>{{pet.Gender}} </mat-icon>\\n                    </h2>\\n                    <label>\\n                        {{pet.Type}}\\n                        <br>\\n                        <mat-icon>cake</mat-icon>{{pet.Birthdate.toDate()| date:'dd/MM/yyyy'}}\\n                        <span *ngIf=\\\"pet.Breed\\\"> -{{pet.Breed}} </span>\\n                        -- {{getAge(pet.Birthdate.toDate()) }} години\\n                        <span *ngIf=\\\"pet.Weight\\\">- {{pet.Weight}}kg</span>\\n                    </label>\\n                </div>\\n\\n                <div *ngIf=\\\"pet.Type == 'Куче' || pet.Type=='Мачка'\\\">\\n\\n                    <hr>\\n\\n                    <div class=\\\"block\\\">\\n                        <img src=\\\"../../assets/img/vakcina.png\\\">\\n                        <br>\\n                        <mat-label class=\\\"sm-font\\\">Беснило</mat-label>\\n                        <br>\\n                        <div *ngIf=\\\"pet.Rabies\\\">\\n                            <br>\\n                            <mat-label>{{pet.DateRabies?.toDate().setYear(pet.DateRabies.toDate().getFullYear() + 1)|\\n                                date:'dd/MM/yyyy'}}</mat-label>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"block\\\">\\n                        <img src=\\\"../../assets/img/vakcina.png\\\">\\n                        <br>\\n                        <mat-label class=\\\"sm-font\\\">Останати вакцини</mat-label>\\n                        <div *ngIf=\\\"pet.Parvo\\\">\\n                            <mat-label>{{pet.DateParvo?.toDate().setYear(pet.DateParvo.toDate().getFullYear() + 1)|\\n                                date:'dd/MM/yyyy'}}</mat-label>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"block\\\">\\n                        <img src=\\\"../../assets/img/apce.png\\\">\\n                        <br>\\n                        <mat-label class=\\\"sm-font\\\">Внатрешни паразити</mat-label>\\n                        <br>\\n                        <mat-label>{{pet.ParasitesDate?.toDate().setMonth(pet.ParasitesDate.toDate().getMonth() + 3)|\\n                            date:'dd/MM/yyyy'}}</mat-label>\\n\\n                    </div>\\n                    <div class=\\\"block\\\">\\n                        <img src=\\\"../../assets/img/paraziti.png\\\">\\n                        <br>\\n                        <mat-label class=\\\"sm-font\\\">Надворешни паразити</mat-label>\\n                        <br>\\n\\n                        <mat-label>{{pet.AmpuleDate?.toDate().setMonth(pet.AmpuleDate.toDate().getMonth() + 3)|\\n                            date:'dd/MM/yyyy'}}</mat-label>\\n                        <br>\\n                    </div>\\n                    <div class=\\\"block\\\">\\n                        <img src=\\\"../../assets/img/grooming.png\\\">\\n                        <br>\\n                        <mat-label class=\\\"sm-font\\\">Шишање/капење</mat-label>\\n                        <br>\\n                        <mat-label>{{pet.Groomer?.toDate().setMonth(pet.Groomer.toDate().getMonth() + 3)|\\n                            date:'dd/MM/yyyy'}}</mat-label>\\n                        <br>\\n                    </div>\\n                    <hr>\\n\\n                </div>\\n\\n                <div style=\\\"padding:5%\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"deletePet(pet.Uid)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                        Избриши миленик\\n                    </button>\\n                    <button mat-raised-button (click)=\\\"sendNotification()\\\">Tест нотификација</button>\\n\\n                </div>\\n\\n            </div>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n</div>\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n        [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"(isHandset$ | async) === false\\\" [ngClass]=\\\"{hidden:!(isHandset$ | async)}\\\">\\n        <mat-toolbar>Мени</mat-toolbar>\\n        <mat-nav-list>\\n            <a mat-list-item routerLink=\\\"vets\\\">Ветеринари</a>\\n            <a mat-list-item routerLink=\\\"shops\\\">Пет шоп</a>\\n            <span *ngIf=\\\"auth.user$ | async as user; else login\\\">\\n                    <a mat-list-item  routerLink=\\\"myPet\\\"> <mat-icon>pets</mat-icon> {{user.name}}</a> \\n                    <a  mat-raised-button color=\\\"primary\\\"  (click)=\\\"auth.signOut()\\\">Одјави се</a>\\n            </span>\\n                <ng-template #login>\\n                    <a mat-raised-button color=\\\"primary\\\" (click)=\\\"auth.GoogleSignIn()\\\">Најави се</a>\\n                </ng-template>\\n        </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n        <mat-toolbar color=\\\"accent\\\">\\n            <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n                <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n            </button>\\n            <a routerLink=\\\"\\\"> <img src=\\\"../../../assets/img/vet.png\\\" height=\\\"100\\\" width=\\\"100\\\">\\n\\n                PetSkp</a>\\n            <span class=\\\"spacer\\\"></span>\\n            <div [ngClass]=\\\"{hidden:(isHandset$ | async)}\\\">\\n                <a mat-button routerLink=\\\"vets\\\">Ветеринари</a>\\n                <a mat-button routerLink=\\\"shops\\\">Пет шоп</a>\\n                <span *ngIf=\\\"auth.user$ | async as user; else login\\\">\\n                    <a routerLink=\\\"myPet\\\"> <mat-icon>pets</mat-icon>{{user.name}}</a> \\n                    <a mat-raised-button color=\\\"primary\\\" style=\\\"color:white!important\\\" (click)=\\\"auth.signOut()\\\">Одјави се</a>\\n                </span>\\n                <ng-template #login>\\n                    <a mat-raised-button color=\\\"primary\\\" style=\\\"color:white!important\\\" (click)=\\\"auth.GoogleSignIn()\\\">Најави се</a>\\n                </ng-template>\\n            </div>\\n        </mat-toolbar>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \"<div class=\\\"content\\\">\\n\\n    <h2> Препорачани производи </h2>\\n\\n    <div class=\\\"container-fluid yellow-bg\\\">\\n        <ngb-carousel >\\n            <ng-template ngbSlide *ngFor=\\\"let prod of myArray\\\">\\n                <div class=\\\"picsum-img-wrapper\\\">\\n                    <img [src]=\\\"prod.img\\\" class=\\\"picPet\\\">\\n                    <br>\\n                    <h3>{{prod.name}}</h3>\\n                    <p>{{prod.price ? prod.price + ' денари' : ''}}</p>\\n                    <p>{{prod.petshop}}</p>\\n                    <br>\\n                </div>\\n            </ng-template>\\n        </ngb-carousel>\\n\\n    </div>\\n    <div>\\n        <br>\\n        <br>\\n        <h2> Пронајди пет шоп </h2>\\n\\n    </div>\\n    <div>\\n        <mat-card-header>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n        </mat-card-header>\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px grid\\\">\\n            <div fxFlex=\\\"25%\\\" fxFlex.xs=\\\"100%\\\" fxFlex.sm=\\\"33%\\\" *ngFor=\\\"let x of obs | async\\\">\\n                <card-component name=\\\"{{x.name}}\\\" address=\\\"{{x.formatted_address.replace('Северна Македонија','')}}\\\" detailsToken=\\\"{{x.place_id}}\\\"\\n                    openNow=\\\"{{x.opening_hours?.open_now}}\\\" rating=\\\"{{x.rating}}\\\" imgRef=\\\"{{x.photos? x.photos[0].photo_reference : null}}\\\"></card-component>\\n            </div>\\n        </div>\\n    </div>\\n    <div style=\\\"text-align: center\\\" class=\\\"content\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showMore()\\\">Прикажи повеќе</button>\\n        \\n          </div>\\n\\n</div>\"","module.exports = \"<div class=\\\"content\\\" *ngIf=\\\"auth.user$ | async as user\\\">\\n  <div *ngIf=\\\"vet != null\\\">\\n    <h3>Мој ветеринар</h3>\\n    <h4 color=\\\"primary\\\">\\n      {{vet.name}}\\n    </h4>\\n    <hr>\\n    <div>\\n      <p><b> Контакт</b></p>\\n      <p>\\n        <a href=\\\"{{'tel:'+vet.formatted_phone_number}}\\\">\\n          <mat-icon>phone</mat-icon>{{vet.formatted_phone_number}}\\n        </a>\\n      </p>\\n      <p><a href=\\\"{{vet.website}}\\\">\\n          <mat-icon>web</mat-icon>Веб страна\\n        </a></p>\\n      <p>\\n        <mat-icon>house</mat-icon> {{vet.formatted_address}}\\n      </p>\\n      <mat-accordion>\\n\\n        <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Работно време\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              {{vet.opening_hours.open_now ? 'Отворено' : 'Затворено'}}\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <div *ngFor=\\\"let a of vet.opening_hours.weekday_text\\\">\\n            <p>{{a}} </p>\\n          </div>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n    </div>\\n    <hr>\\n  </div>\\n</div> \\n\\n<div class=\\\"content\\\">\\n  <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"15\\\">\\n    <agm-marker *ngFor=\\\"let x of obs | async\\\" [latitude]=\\\"x.geometry.location.lat\\\" [longitude]=\\\"x.geometry.location.lng\\\"\\n      [markerDraggable]=\\\"false\\\">\\n    </agm-marker>\\n  </agm-map>\\n  <hr>\\n  <mat-card-header>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n  </mat-card-header>\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px grid\\\">\\n    <div fxFlex=\\\"25%\\\" fxFlex.xs=\\\"100%\\\" fxFlex.sm=\\\"33%\\\" *ngFor=\\\"let x of obs | async\\\">\\n      <card-component name=\\\"{{x.name}}\\\" address=\\\"{{x.formatted_address.replace('Северна Македонија','')}}\\\" detailsToken=\\\"{{x.place_id}}\\\"\\n        rating=\\\"{{x.rating}}\\\" imgRef=\\\"{{x.photos? x.photos[0].photo_reference : null}}\\\" showFavButton=\\\"showLikeBtn\\\"></card-component>\\n    </div>\\n  </div>\\n  <div style=\\\"text-align: center\\\" class=\\\"content\\\">\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showMore()\\\">Прикажи повеќе</button>\\n\\n  </div>\\n\\n</div>\"","module.exports = \".content {\\r\\n    padding: 5%;\\r\\n}\\r\\n\\r\\nmat-label{\\r\\n    font-weight: bold;\\r\\n    margin-right: 16px;\\r\\n}\\r\\n\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n  }\\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXBldC1kaWFsb2cvYWRkLXBldC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hZGQtcGV0LWRpYWxvZy9hZGQtcGV0LWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogNSU7XHJcbn1cclxuXHJcbm1hdC1sYWJlbHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG59XHJcblxyXG4ubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG4gIH1cclxuICBcclxuIl19 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AuthService } from '../auth.service';\nimport { Pet } from '../models';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-pet-dialog',\n  templateUrl: './add-pet-dialog.component.html',\n  styleUrls: ['./add-pet-dialog.component.css'],\n  providers: [DatePipe]\n})\nexport class AddPetDialogComponent implements OnInit {\n\n  public pet: Pet = {\n    Breed: '',\n    Gender: '',\n    Name: '',\n    Type: '',\n    Userid: '',\n    Birthdate: new Date()\n  };\n\n  birthDate: any;\n  rabiesDate: any;\n  parvoDate: any;\n  parasitesDate: any;\n  ampuleDate: any;\n  groomerDate: any;\n\n  maxDate: Date = new Date();\n\n  constructor(@Inject(MAT_DIALOG_DATA) data, private afs: AngularFirestore, public auth: AuthService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  savePet() {\n\n    this.pet.Birthdate = this.birthDate;\n    if (this.parasitesDate != undefined) {\n      this.pet.ParasitesDate = this.parasitesDate;\n    }\n\n    if (this.parvoDate != undefined) {\n      this.pet.DateParvo = this.parvoDate;\n    }\n    if (this.rabiesDate != undefined) {\n      this.pet.DateRabies = this.rabiesDate;\n    }\n    if (this.ampuleDate != undefined) {\n      this.pet.AmpuleDate = this.ampuleDate;\n    }\n    if (this.groomerDate != undefined) {\n      this.pet.Groomer = this.groomerDate;\n    }\n    this.pet.Userid = this.auth.userUid;\n\n     this.afs.collection('pets').add(this.pet)\n     .then(res => {\n     })\n     .catch(e => {\n         console.log(e);\n     })\n\n     \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-content: center;\\r\\n    align-self: center;\\r\\n    align-items: center;\\r\\n    margin: 50%;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 50%;\\r\\n  }\\r\\n  \\r\\n  .content {\\r\\n    padding: 16px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDUwJTtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyID4gKiB7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gIH1cclxuXHJcbiAgLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogMTZweDtcclxufSJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'petSkopje';\n\n  message;\n\n  constructor() { }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { IConfig } from './models';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class AppConfig {\r\n    static settings: IConfig;\r\n    constructor(private http: HttpClient) {}\r\n    load() {\r\n        const jsonFile = `assets/config.json`;\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.http.get(jsonFile).toPromise().then((response : IConfig) => {\r\n               AppConfig.settings = <IConfig>response;\r\n               resolve();\r\n            }).catch((response: any) => {\r\n               reject(`Could not load file '${jsonFile}': ${JSON.stringify(response)}`);\r\n            });\r\n        });\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { MatToolbarModule, MatButtonModule, MatIconModule, MatSidenavModule, MatListModule, MatCardModule, MatPaginatorModule, MatProgressSpinnerModule, MatDialogModule, MAT_DIALOG_DATA, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSlideToggleModule, MatDatepickerModule, MatRadioModule, MatNativeDateModule, MatGridListModule, MatChipsModule, MatAutocompleteModule, MatButtonToggleModule, MatExpansionModule, MatMenuModule, MatProgressBarModule, MatRippleModule, MatSelectModule, MatSliderModule, MatSnackBarModule, MatSortModule, MatTableModule, MatTabsModule, MatTooltipModule, MatStepperModule } from '@angular/material';\nimport { VetsComponent } from './vets/vets.component';\nimport { ShopsComponent } from './shops/shops.component';\nimport { MypetComponent } from './mypet/mypet.component';\nimport { RouterModule } from '@angular/router';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CardComponent } from './common/card/card.component';\nimport { DialogDetailsComponent } from './dialog-details/dialog-details.component';\nimport { AppConfig } from './app.config';\nimport { AuthGuard } from './auth.guard';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AddPetDialogComponent } from './add-pet-dialog/add-pet-dialog.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AgmCoreModule } from '@agm/core';\n\n\nexport function initializeApp(appConfig: AppConfig) {\n  return () => appConfig.load();\n}\nconst config =  {\n  apiKey: \"\",\n  authDomain: \"petskopje.firebaseapp.com\",\n  projectId: \"petskopje\",\n  storageBucket: \"petskopje.appspot.com\",\n  messagingSenderId: \"\",\n  appId: \"\"\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    VetsComponent,\n    ShopsComponent,\n    MypetComponent,\n    HomepageComponent,\n    CardComponent,\n    DialogDetailsComponent,\n    AddPetDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatToolbarModule,\n    MatButtonModule,\n    AgmCoreModule.forRoot({\n      apiKey: \"\"\n    }),\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatSidenavModule,NgbModule,\n    MatFormFieldModule,\n        MatInputModule,\n    MatIconModule,\n    MatListModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    LayoutModule,\n    FlexLayoutModule,\n    AngularFireModule.initializeApp(config),\n    AngularFirestoreModule.enablePersistence(),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    MatSidenavModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    FormsModule,\n    MatListModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n    MatChipsModule,\n    HttpClientModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatIconModule,\n    MatToolbarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    RouterModule.forRoot([\n      { path: '', component: HomepageComponent },\n      { path: 'vets', component: VetsComponent },\n      { path: 'shops', component: ShopsComponent },\n      { path: 'myPet', component: MypetComponent,  canActivate: [AuthGuard] },\n    ])\n  ],\n  providers: [{ provide: MAT_DIALOG_DATA, useValue: {} },\n    AppConfig,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeApp,\n    deps: [AppConfig], multi: true\n  }],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    DialogDetailsComponent,\n    AddPetDialogComponent\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take, map, tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements  CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n\n      return this.auth.user$.pipe(\n           take(1),\n           map(user => !!user),\n           tap(loggedIn => {\n             if (!loggedIn) {\n               console.log('access denied')\n               this.router.navigate(['/login']);\n             }\n         })\n    )\n  }\n}","import { Injectable } from \"@angular/core\";\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from './models';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    public user$: Observable<User>;\r\n    public userUid: string;\r\n\r\n    constructor(\r\n        private afAuth: AngularFireAuth,\r\n        private afs: AngularFirestore,\r\n        private router: Router\r\n    ) {\r\n        this.user$ = this.afAuth.authState.pipe(\r\n            switchMap(user => {\r\n                if (user) {\r\n                    this.userUid = user.uid;\r\n                    return this.afs.doc<firebase.User>(`users/${user.uid}`).valueChanges();\r\n                }\r\n                else {\r\n                    return of(null);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    async GoogleSignIn() {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        const credential = await this.afAuth.auth.signInWithPopup(provider);\r\n        return this.updateUserData(credential.user);\r\n    }\r\n\r\n    public updateUserData(user: firebase.User, ) {\r\n        const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\r\n\r\n        const data: User = {\r\n            uid: user.uid,\r\n            email: user.email\r\n        }\r\n\r\n        return userRef.set(data, { merge: true })\r\n\r\n    }\r\n\r\n    public updateCurrentUser(notifPet?: boolean, notifProd?: boolean, vetUid?: string) {\r\n        const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${this.userUid}`);\r\n\r\n        const data: User = {\r\n            uid: this.userUid,\r\n        }\r\n\r\n        if (notifPet != null && notifProd != null) {\r\n            data.notifPet = notifPet;\r\n            data.notifProd = notifProd;\r\n        }\r\n        if (vetUid) {\r\n            data.vetUid = vetUid;\r\n        }\r\n\r\n        return userRef.set(data, { merge: true })\r\n\r\n    }\r\n\r\n    async signOut() {\r\n        await this.afAuth.auth.signOut();\r\n        this.router.navigate(['/']);\r\n    }\r\n}","module.exports = \".content {\\r\\n    padding: 16px;\\r\\n}\\r\\n\\r\\n.content > mat-card {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vY2FyZC9jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG59XHJcblxyXG4uY29udGVudCA+IG1hdC1jYXJkIHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxufVxyXG4iXX0= */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { DialogDetailsComponent } from 'src/app/dialog-details/dialog-details.component';\nimport { AppConfig } from 'src/app/app.config';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'card-component',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  constructor(public dialog:MatDialog, public auth: AuthService) { }\n  @Input() name : string;\n  @Input() address : string;\n  @Input() imgRef?: string;  \n  @Input() openNow: boolean;\n  @Input() rating: number;\n  @Input() detailsToken?:string;\n  @Input() showFavButton?:boolean = false;\n  photourl:string;\n  protected apiKey = AppConfig.settings.apiKey;\n\n  private getimg():string{\n    return \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\"+this.imgRef+\"&key=\"+this.apiKey;\n  }\n\n  public openDialog(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      detailsToken: this.detailsToken,\n  };\n\n    this.dialog.open(DialogDetailsComponent, {data:dialogConfig})\n  }\n\n  ngOnInit(){\n    this.photourl = this.getimg();\n  }\n\n  setVet(){\n    \n    if (confirm(\"Дали сте сигурни дека сакате да го поставите матичниот ветеринар?\")) {\n      this.auth.updateCurrentUser(null, null, this.detailsToken);\n    }\n  \n  }\n\n}\n","module.exports = \"agm-map { height: 200px; width: 700px }\\r\\n\\r\\n@media only screen and (max-width: 600px) {\\r\\n    agm-map { height: 200px; width: 400px }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9nLWRldGFpbHMvZGlhbG9nLWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGFBQWEsRUFBRSxhQUFhOztBQUV0QztJQUNJLFVBQVUsYUFBYSxFQUFFLGFBQWE7QUFDMUMiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2ctZGV0YWlscy9kaWFsb2ctZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7IGhlaWdodDogMjAwcHg7IHdpZHRoOiA3MDBweCB9XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgICBhZ20tbWFwIHsgaGVpZ2h0OiAyMDBweDsgd2lkdGg6IDQwMHB4IH1cclxufSJdfQ== */\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlacesResponse, PlacesDetailsResponse, PlacesResult } from '../models';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-dialog-details',\n  templateUrl: './dialog-details.component.html',\n  styleUrls: ['./dialog-details.component.css']\n})\nexport class DialogDetailsComponent implements OnInit {\n  detailsToken:string;\n  place:PlacesResult;\n  loading:boolean;\n  protected apiKey = AppConfig.settings.apiKey;\n  lat = 21.3069;\n  lng = -157.8583;\n  mapType = \"satellite\";\n  constructor(private httpClient: HttpClient, @Inject(MAT_DIALOG_DATA) data) { this.detailsToken = data.data.detailsToken; }\n\n\n  public getPlaces(): Observable<PlacesDetailsResponse> {\n    const self = this;\n    let url: string;\n     url = \"https://maps.googleapis.com/maps/api/place/details/json?place_id=\"+this.detailsToken+\"&key=\"+this.apiKey+\"&language=mk\"; \n    return self.httpClient.get<PlacesDetailsResponse>(url);\n  }\n\n ngOnInit() {\n   this.loading = true;\n  this.getPlaces().subscribe(x => {this.place = x.result; this.loading=false});\n  \n }\n\n private getimg(imgRef: string):string{\n  return \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\"+imgRef+\"&key=\"+this.apiKey;\n}\n\n\n}\n","module.exports = \"\\r\\n  .content {\\r\\n    padding: 5%;\\r\\n    width: 50%;\\r\\n    display: inline-grid;\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 800px) {\\r\\n    mat-grid-list{\\r\\n      width: 100%;\\r\\n    }\\r\\n    .content {\\r\\n      padding: 5%;\\r\\n      width: 100%;\\r\\n  \\r\\n      text-align: center\\r\\n  }\\r\\n  \\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZXBhZ2UvaG9tZXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsVUFBVTtJQUNWLG9CQUFvQjtJQUNwQjtBQUNKOztBQUVBO0lBQ0k7TUFDRSxXQUFXO0lBQ2I7SUFDQTtNQUNFLFdBQVc7TUFDWCxXQUFXOztNQUVYO0VBQ0o7O0VBRUEiLCJmaWxlIjoic3JjL2FwcC9ob21lcGFnZS9ob21lcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbiAgLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogNSU7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWdyaWQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgbWF0LWdyaWQtbGlzdHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAuY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmc6IDUlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICBcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXHJcbiAgfVxyXG4gIFxyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  columns:number = 4;\n  constructor() { }\n  public cols: number;\n\n  ngOnInit() {\n    this.cols = (window.innerWidth <= 1200) ? 1 : 2;\n\n}\n\nonResize(event) {\n  this.cols = (event.target.innerWidth <= 1200) ? 1 : 2;\n}\n}\n","module.exports = \"\\r\\n  .content {\\r\\n    padding: 5%;\\r\\n    width: 50%;\\r\\n    display: inline-grid;\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\nmat-grid-list{\\r\\n  margin-top:5%\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 800px) {\\r\\n  mat-grid-list{\\r\\n    width: 100%;\\r\\n  }\\r\\n  .content {\\r\\n    padding: 5%;\\r\\n    width: 100%;\\r\\n\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\nimg {\\r\\n  border-radius: 50%;\\r\\n  width: 70px;\\r\\n  height: 70px;\\r\\n}\\r\\n\\r\\n.block{\\r\\n  vertical-align: top;\\r\\n  display: inline-block;\\r\\n  text-align: center;\\r\\n  width: 120px;\\r\\n  padding: 6px;\\r\\n}\\r\\n\\r\\n.sm-font{\\r\\n  font-size: x-small\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXlwZXQvbXlwZXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsVUFBVTtJQUNWLG9CQUFvQjtJQUNwQjtBQUNKOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztFQUNiO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsV0FBVzs7SUFFWDtBQUNKOztBQUVBOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBR0E7RUFDRSxtQkFBbUI7RUFDbkIscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0U7QUFDRiIsImZpbGUiOiJzcmMvYXBwL215cGV0L215cGV0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAuY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiA1JTtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZ3JpZDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlclxyXG59XHJcblxyXG5tYXQtZ3JpZC1saXN0e1xyXG4gIG1hcmdpbi10b3A6NSVcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gIG1hdC1ncmlkLWxpc3R7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogNSU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG5cclxufVxyXG5cclxuaW1nIHtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgd2lkdGg6IDcwcHg7XHJcbiAgaGVpZ2h0OiA3MHB4O1xyXG59XHJcblxyXG5cclxuLmJsb2Nre1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogMTIwcHg7XHJcbiAgcGFkZGluZzogNnB4O1xyXG59XHJcblxyXG4uc20tZm9udHtcclxuICBmb250LXNpemU6IHgtc21hbGxcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Pet } from '../models';\nimport { MatDialog } from '@angular/material';\nimport { AddPetDialogComponent } from '../add-pet-dialog/add-pet-dialog.component';\nimport { AuthService } from '../auth.service';\nimport { SwPush } from '@angular/service-worker';\nimport { NotificationService } from '../notification.service';\n\n@Component({\n  selector: 'app-mypet',\n  templateUrl: './mypet.component.html',\n  styleUrls: ['./mypet.component.css']\n})\nexport class MypetComponent implements OnInit {\n  myArray: Pet[] = [];\n  public cols: number;\n  isChecked = true;\n  notifPet: boolean = true;\n  notifProd: boolean = true;\n  vapidKeys: string = `BNF5hmxX5kcE-xV0Ec05AtWmNXtJyLng6cHVL7n0SXB11qEEVIUuddkVNe4HZ7TeTDs51K-Kp26GpFEIzA5sdr8`;\n\n\n  constructor(private afs: AngularFirestore, private swPush: SwPush, private service: NotificationService, public dialog: MatDialog, public auth: AuthService) {\n  }\n\n  updateUser(np:boolean, npr:boolean) {\n    this.auth.updateCurrentUser(np, npr);\n    this.notifPet = np;\n    this.notifProd= npr;\n  }\n\n\n  ngOnInit(): void {\n    this.cols = (window.innerWidth <= 1200) ? 1 : 2;\n    this.getPets();\n  }\n  getPets() {\n    this.myArray = [];\n    this.afs.collection(\"pets\", ref => ref.where(\"Userid\", \"==\", this.auth.userUid)).get()\n      .subscribe((ss) => {\n        ss.docs.forEach((doc) => {\n          let pet = doc.data() as Pet;\n          pet.Uid = doc.id;\n          this.myArray.push(pet);\n        });\n      });\n  }\n\n  public openDialog() {\n    this.dialog.open(AddPetDialogComponent).afterClosed()\n      .subscribe(() => this.getPets());\n  }\n\n  deletePet(uid: string) {\n\n    if (confirm(\"Дали сте сигурни дека сакате да го избришете миленичето?\")) {\n      this.afs.collection(\"pets\").doc(uid).delete().then(() => {\n        this.ngOnInit();\n      }).catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n    }\n  }\n\n  getAge(birthdate: Date): number {\n    let timeDiff = Math.abs(Date.now() - birthdate.getTime());\n    let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\n    return age\n  }\n\n\n  onResize(event) {\n    this.cols = (event.target.innerWidth <= 1200) ? 1 : 2;\n  }\n\n  \n  sendNotification() {\n    if (this.swPush.isEnabled && this.notifPet) {\n      this.swPush.requestSubscription({\n        serverPublicKey: this.vapidKeys\n      })\n      .then(sub => {\n        this.service.postSubscription(sub).subscribe();\n      })\n      .catch(console.error);\n    }\n  }\n}\n","module.exports = \".sidenav-container {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .hidden{\\r\\n    display: none;\\r\\n  }\\r\\n  \\r\\n  .spacer{\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  mat-toolbar a{\\r\\n    display: inline-block;\\r\\n    margin: 0 10px;\\r\\n    color:#2b4219;\\r\\n    text-decoration: none\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2aWdhdGlvbi9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztFQUNiOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUNBO0lBQ0UsY0FBYztFQUNoQjs7RUFDQTtJQUNFLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsYUFBYTtJQUNiO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9uYXZpZ2F0aW9uL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmhpZGRlbntcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIC5zcGFjZXJ7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICB9XHJcbiAgbWF0LXRvb2xiYXIgYXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbjogMCAxMHB4O1xyXG4gICAgY29sb3I6IzJiNDIxOTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxyXG4gIH1cclxuICAiXX0= */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent  {\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver,public auth: AuthService) {}\n}\n","import { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n   providedIn: 'root'\r\n\r\n})\r\n\r\nexport class NotificationService {\r\n\r\n   public notificationURL = 'http://localhost:3000/subscribe';\r\n\r\n   constructor(private _http: HttpClient) { }\r\n\r\n   postSubscription(sub: PushSubscription) {\r\n      return this._http.post(this.notificationURL, sub).pipe(catchError(this.handlError));\r\n   }\r\n   handlError(error) {\r\n      return throwError(error.error.message);\r\n   }\r\n}\r\n","module.exports = \".content {\\r\\n    padding: 5%;\\r\\n}\\r\\n\\r\\n.carousel-caption{\\r\\n    color: black!important\\r\\n}\\r\\n\\r\\n.yellow-bg{\\r\\n    background-color: #d6d09a\\r\\n}\\r\\n\\r\\n.picsum-img-wrapper{\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\n.picPet{\\r\\n    max-width: 30%;\\r\\n    max-height: 30%;\\r\\n    padding: 2%\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvcHMvc2hvcHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSTtBQUNKOztBQUVBO0lBQ0k7QUFDSjs7QUFDQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0lBQ2Y7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3Nob3BzL3Nob3BzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiA1JTtcclxufVxyXG5cclxuLmNhcm91c2VsLWNhcHRpb257XHJcbiAgICBjb2xvcjogYmxhY2shaW1wb3J0YW50XHJcbn1cclxuXHJcbi55ZWxsb3ctYmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDZkMDlhXHJcbn1cclxuXHJcbi5waWNzdW0taW1nLXdyYXBwZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG4ucGljUGV0e1xyXG4gICAgbWF4LXdpZHRoOiAzMCU7XHJcbiAgICBtYXgtaGVpZ2h0OiAzMCU7XHJcbiAgICBwYWRkaW5nOiAyJVxyXG59Il19 */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlacesResult, PlacesResponse, PetShopResult } from '../models';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from '../app.config';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\n@Component({\n  selector: 'app-shops',\n  templateUrl: './shops.component.html',\n  styleUrls: ['./shops.component.css']\n})\nexport class ShopsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n  public places: PlacesResult[];\n  public filteredPlaces: PlacesResult[];\n  public token: string;\n  dataSource: MatTableDataSource<PlacesResult>;\n  obs: Observable<any>;\n   myArray: PetShopResult[];\n  protected apiKey = AppConfig.settings.apiKey;\n  constructor(private httpClient: HttpClient,private changeDetectorRef: ChangeDetectorRef,private afs: AngularFirestore) { }\n\n\n   public getPlaces(token?:string): Observable<PlacesResponse> {\n     const self = this;\n     let url: string;\n     if(token != null || token != undefined){\n      url = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?pagetoken=&\"+token+\"key=\"+this.apiKey+\"language=mk\"; \n     }\n     else{\n      url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=petshops+in+skopje&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key=\"+this.apiKey+\"&language=mk\"; \n     }\n     return self.httpClient.get<PlacesResponse>(url);\n   }\n\n  ngOnInit() {\n   this.getPlaces().subscribe(x => {\n     this.places = x.results; \n     this.token = x.next_page_token; \n     this.filteredPlaces = x.results ; \n     this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n     this.changeDetectorRef.detectChanges();\n     this.dataSource.paginator = this.paginator;\n     this.obs = this.dataSource.connect();\n    });\n\n    this.getproducts();\n\n\n  }\n\n  getproducts() {\n    this.myArray = [];\n    this.afs.collection(\"petshop\").get()\n      .subscribe((ss) => {\n        ss.docs.forEach((doc) => {\n          let pet = doc.data() as PetShopResult;\n          this.myArray.push(pet);\n        });\n      });\n  }\n\n  getData() {\n    this.getPlaces(this.token).subscribe(x => {this.places = x.results; this.token = x.next_page_token;});\n    this.filteredPlaces = this.places;\n    return true;\n  }\n\n  applyFilter(filterValue: string) {\n    if(filterValue == undefined || filterValue == null){\n      this.filteredPlaces = this.places;\n    }\n    else\n    this.filteredPlaces = this.places.filter(v => v.name.includes(filterValue) || v.formatted_address.includes(filterValue));\n    this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n    this.changeDetectorRef.detectChanges();\n    this.dataSource.paginator = this.paginator;\n    this.obs = this.dataSource.connect();\n\n  }\n\n  showMore() {\n    this.getPlaces(this.token).subscribe(x => {\n    this.places = x.results; this.token = x.next_page_token;\n      this.filteredPlaces = this.filteredPlaces.concat(x.results);\n      this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n      this.changeDetectorRef.detectChanges();\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n  }\n\n\n}\n","module.exports = \".content {\\r\\n    padding: 5%;\\r\\n}\\r\\n\\r\\nagm-map { height: 300px; width: 100% }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmV0cy92ZXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUEsVUFBVSxhQUFhLEVBQUUsWUFBWSIsImZpbGUiOiJzcmMvYXBwL3ZldHMvdmV0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogNSU7XHJcbn1cclxuXHJcbmFnbS1tYXAgeyBoZWlnaHQ6IDMwMHB4OyB3aWR0aDogMTAwJSB9XHJcbiJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PlacesResponse, PlacesResult, PlacesDetailsResponse, User } from '../models';\nimport { AppConfig } from '../app.config';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport { AuthService } from '../auth.service';\n\n\n\n@Component({\n  selector: 'app-vets',\n  templateUrl: './vets.component.html',\n  styleUrls: ['./vets.component.css']\n})\nexport class VetsComponent implements OnInit {\n\n  constructor(private httpClient: HttpClient, private changeDetectorRef: ChangeDetectorRef, public auth: AuthService) { }\n  public places: PlacesResult[];\n  public token: string;\n  protected apiKey = AppConfig.settings.apiKey;\n  public filteredPlaces: PlacesResult[];\n  dataSource: MatTableDataSource<PlacesResult>;\n  obs: Observable<any>;\n  lat: number;\n  vet: PlacesResult = null;\n  showLikeBtn: boolean = true;\n\n  lng: number;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n\n  public getPlaces(token?: string): Observable<PlacesResponse> {\n    const self = this;\n    let url: string;\n    if (token != null || token != undefined) {\n      url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=veterinarians+in+skopje&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key=\" + this.apiKey + \"&pagetoken=\" + this.token;\n    }\n    else {\n      url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=veterinarians+in+skopje&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key=\" + this.apiKey + \"&language=mk\";\n    }\n    return self.httpClient.get<PlacesResponse>(url);\n  }\n\n  ngOnInit() {\n    this.getCurrentLocation();\n    this.getMatVet();\n\n    this.getPlaces().subscribe(x => {\n      this.places = x.results; this.token = x.next_page_token;\n      this.filteredPlaces = x.results;\n      this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n      this.changeDetectorRef.detectChanges();\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n\n  }\n\n  showMore() {\n    this.getPlaces(this.token).subscribe(x => {\n      this.places = x.results; this.token = x.next_page_token;\n      this.filteredPlaces = this.filteredPlaces.concat(x.results);\n      console.log(x.results)\n      this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n      this.changeDetectorRef.detectChanges();\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n  }\n\n\n  applyFilter(filterValue: string) {\n    if (filterValue == undefined || filterValue == null) {\n      this.filteredPlaces = this.places;\n    }\n    else\n      this.filteredPlaces = this.places.filter(v => v.name.includes(filterValue) || v.formatted_address.includes(filterValue));\n    this.dataSource = new MatTableDataSource<PlacesResult>(this.filteredPlaces);\n    this.changeDetectorRef.detectChanges();\n    this.dataSource.paginator = this.paginator;\n    this.obs = this.dataSource.connect();\n\n  }\n\n  getCurrentLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n    else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  getMatVet() {\n\n    let user: User;\n    this.auth.user$.subscribe((x) => {\n      user = x;\n      this.getVet(user.vetUid).subscribe(x => { this.vet = x.result; this.showLikeBtn = false }, () => { return false });\n    });\n\n\n  }\n\n  public getVet(vetUid: string): Observable<PlacesDetailsResponse> {\n    const self = this;\n    let url: string;\n    url = \"https://maps.googleapis.com/maps/api/place/details/json?place_id=\" + vetUid + \"&key=\" + this.apiKey + \"&language=mk\";\n    return self.httpClient.get<PlacesDetailsResponse>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'/app/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}